@*@inject HttpClient Http*@
<div class="modal fade show rounded" id="myModal" style="display:block; background-color: rgba(10,10,10,.6);" aria-modal="true" role="dialog">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">Modal title</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close" @onclick="Cancel"></button>
            </div>

            <div class="modal-body">
                @if (CurrRec != null)
                {
                    <div class="container">
                        <div class="row">
                            <div class="col">
                                <label for="name">Name</label>
                                
                            </div>
                            <div class="col">
                                <input id="name" @bind="CurrRec.FirstName" class="form-control" />
                            </div>
                        </div>
                        <div class="row">
                            <div class="col">
                                <label for="lastName">Last Name</label>

                            </div>
                            <div class="col">
                                <input id="lastName" @bind="CurrRec.LastName" class="form-control" />
                            </div>
                        </div>
                        <div class="row">
                            <div class="col">
                                <label for="email">E-mail</label>

                            </div>
                            <div class="col">
                                <input id="email" @bind="CurrRec.Email" class="form-control" />
                            </div>
                        </div>
                        <div class="row">
                            <div class="col">
                                <label for="hobby">Hobby</label>
                            </div>
                            <div class="col">
                                <select id="hobby" @bind="CurrRec.HobbyCode" class="form-select">
                                    <option value="0" disabled selected hidden>Select</option>
                                    @for (int i = 0; i < Hobbies.Count; i++)
                                    {
                                        <option value="@Hobbies[i].RowKey">@Hobbies[i].Description</option>
                                    }
                                </select>
                            </div>
                        </div>
                    </div>
                
                
@*                    <EditForm Model="currRec" OnValidSubmit="Save">
                    <div>
                        <label for="name">Name</label>
                        <InputText id="name" @bind-Value="currRec.FirstName" class="form-control"></InputText>
                    </div>
                    <div>
                        <label for="lastName">Last Name</label>
                        <InputText id="lastName" @bind-Value="currRec.LastName" class="form-control"></InputText>
                    </div>
                    <div>
                        <label for="email">E-mail</label>
                        <InputText id="email" @bind-Value="currRec.Email" class="form-control"></InputText>
                    </div>
                    <div>
                        <label for="hobby">Hobby</label>
                        <InputSelect id="hobby" @bind-Value="currRec.HobbyCode" class="form-select">
                            <option value="0" disabled selected hidden>Select</option>
                            @for (int i = 0; i < hobbyList.Length; i++)
                            {
                                <option value="@hobbyList[i].RowKey">@hobbyList[i].Description</option>
                            }
                        </InputSelect>
                    </div>
                    <br>
                    <button type="button" class="btn btn-primary" @onclick="Save">Save</button>
                    <button type="button" class="btn btn-danger" @onclick="Delete">Delete</button>
                    <button type="button" class="btn btn-info" @onclick="New">New</button>
                </EditForm>*@
                }
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-primary" @onclick="Save">Save</button>
                <button type="button" class="btn btn-danger" @onclick="Delete">Delete</button>
            </div>
        </div>
    </div>
</div>

@code {
    [Parameter] public string Caption { get; set; } = string.Empty;
    [Parameter] public List<SharedLibrary.Hobby> Hobbies { get; set; } = new();
    [Parameter] public SharedLibrary.Person CurrRec { get; set; } = new();
    [Parameter] public EventCallback<bool> OnCancel { get; set; }
    [Parameter] public EventCallback<SharedLibrary.Person> OnSave { get; set; }
    [Parameter] public EventCallback<SharedLibrary.Person> OnDelete { get; set; }

    //protected override async Task OnInitializedAsync()
    //{
    //    //var list = await Http.GetFromJsonAsync<List<SharedLibrary.Person>>($"/api/people/{RowKey}");
    //    //if (list is not null)
    //    //{
    //    //    currRec = list[0];
    //    //}
    //}

    private Task Cancel()
    {
        return OnCancel.InvokeAsync(false);
    }

    private Task Save()
    {
        return OnSave.InvokeAsync(CurrRec);

    }

    private Task Delete()
    {
        return OnDelete.InvokeAsync(CurrRec);
    }
}